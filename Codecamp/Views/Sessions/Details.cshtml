@using Microsoft.AspNetCore.Identity
@inject UserManager<CodecampUser> UserManager
@model Codecamp.ViewModels.SessionViewModel

@{
    ViewData["Title"] = "Details";

    // Get the speaker Id
    int? speakerId = null;
    var user = await UserManager.GetUserAsync(User);
    if (user != null)
    {
        speakerId = user.SpeakerId;
    }
}

<h2><span style="font-weight: bold;">Title:&nbsp;</span>@Model.Name</h2>

<div style="margin-bottom: 40px;">
    @foreach (var speaker in Model.Speakers)
    {
        <div style="max-width: 150px; max-height:150px; position: relative; margin-right: 25px;">
            <a asp-controller="Speakers" asp-action="Details" asp-route-id="@speaker.SpeakerId">
                <img style="max-width: 150px; max-height: 150px;"
                     class="speakerImage"
                     id="@(string.Format("{0}", speaker.SpeakerId))"
                     src=@("/images/default_user_icon.jpg")
                     alt="@(string.Format("{0}", speaker.FullName))" />
                @if (speaker.IsMvp)
                {
                    <img style="width: 30px; height: 30px; z-index: 10; position: absolute; right: 20px; bottom: 20px;"
                         src=@("/images/ms-mvp.jpg") alt=@("Microsoft MVP") />
                }
                <h5>@speaker.FullName</h5>
            </a>
        </div>
    }
</div>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SkillLevel)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SkillLevel)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Keywords)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Keywords)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.IsApproved)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IsApproved)
        </dd>
    </dl>
</div>

<div class="bottom-navigation">
    @if (User.IsInRole("Admin") || (User.IsInRole("Speaker")
      && speakerId.HasValue && Model.SpeakerSessions.Any(s => s.SpeakerId == speakerId.Value)))
    {
        <a asp-action="Edit" asp-route-id="@Model.SessionId">Edit</a><span> | </span>
    }
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('.speakerImage').each(function () {
                setSpeakerImage(this, this.id);
            });
        });
    </script>
}
