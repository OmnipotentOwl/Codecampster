@using Microsoft.AspNetCore.Identity
@inject UserManager<CodecampUser> UserManager
@model Codecamp.Controllers.SessionsController.PageModel

@{
    // Determine whether the current user is a speaker
    int? speakerId = null;
    var user = await UserManager.GetUserAsync(User);
    if (user != null)
    {
        speakerId = user.SpeakerId;
    }
}

<h2>Session</h2>

<form asp-action="Index" id="SessionIndex" asp-route-id="@(Model.SelectedUserType)">
    @* Allow a speaker to create a new session *@
    @if (User.IsInRole("Speaker"))
    {
        <div>
            <a asp-action="Create">Create New</a>
        </div>

        <div class="row">
            <div class="col-md-3">
                <label class="control-label">Sessions to show:</label>
                @Html.DropDownListFor(model => model.SelectedUserType,
                    new SelectList(ViewBag.UserTypes, "UserTypeId", "Description"),
                    new { @id = "SelectedUserType", @class = "form-control", @onchange = "selectedUserTypeChanged();" })
            </div>
        </div>
    }

    <table class="table-striped">
        <thead>
            <tr>
                <th class="col-md-2">
                    @Html.DisplayNameFor(model => model.Sessions[0].Name)
                </th>
                <th class="col-md-3">
                    @Html.DisplayNameFor(model => model.Sessions[0].Description)
                </th>
                <th class="col-md-2">
                    @Html.DisplayNameFor(model => model.Sessions[0].Speakers)
                </th>
                <th class="col-md-2">
                    @Html.DisplayNameFor(model => model.Sessions[0].SkillLevel)
                </th>
                @* Show the approved column if the user is an admin or speaker *@
                @if (User.IsInRole("Admin") || User.IsInRole("Speaker"))
                {
                    <th class="col-md-1">
                        @Html.DisplayNameFor(model => model.Sessions[0].IsApproved)
                    </th>
                }
                <th class="col-md-2"></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Sessions.Count() > 0)
            {
                @foreach (var item in Model.Sessions)
                {
            <tr>
                <td style="padding: 10px;">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td style="padding: 10px;">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td style="padding: 10px;">
                    @foreach (var speakerSession in item.SpeakerSessions)
                    {
                        <div>@Html.DisplayFor(modelItem => speakerSession.Speaker.CodecampUser.FullName)</div>
                    }
                </td>
                <td style="padding: 10px;">
                    @Html.DisplayFor(modelItem => item.SkillLevel)
                </td>
                @* Show the approved flag if the user is an Admin or Speaker *@
                @if (User.IsInRole("Admin") || User.IsInRole("Speaker"))
                {
                    <td align="center" style="padding: 10px;">
                        @Html.DisplayFor(modelItem => item.IsApproved)
                    </td>
                }
                <td style="padding: 10px;" align="center">
                    @* Allow admins and speakers to edit the sessions *@
                    @if (User.IsInRole("Admin") || (User.IsInRole("Speaker")
                    && speakerId.HasValue && item.SpeakerSessions.Any(s => s.SpeakerId == speakerId.Value)))
                    {
                        <a asp-action="Edit" asp-route-id="@item.SessionId">Edit</a><span> | </span>
                    }
                    <a asp-action="Details" asp-route-id="@item.SessionId">Details</a>
                    @* Allow admins and speakers to delete sessions *@
                    @if (User.IsInRole("Admin") || (User.IsInRole("Speaker")
                    && speakerId.HasValue && item.SpeakerSessions.Any(s => s.SpeakerId == speakerId.Value)))
                    {
                        <span> | </span><a asp-action="Delete" asp-route-id="@item.SessionId">Delete</a>
                    }
                </td>
            </tr>
                }
            }
            else
            {
            <td colspan="4">No sessions specified yet...</td>
            }
        </tbody>
    </table>
</form>

@section Scripts {
    <script type="text/javascript">
        // Submit the form
        function selectedUserTypeChanged() {
            $('#SessionIndex').submit();
        }
    </script>
}

