@using Microsoft.AspNetCore.Identity
@inject UserManager<CodecampUser> UserManager
@model Codecamp.ViewModels.SpeakerViewModel

@{
    ViewData["Title"] = Model.FullName;
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Get the speaker Id
    int? speakerId = null;
    var user = await UserManager.GetUserAsync(User);
    if (user != null)
    {
        speakerId = user.SpeakerId;
    }
}

<h2>@ViewData["Title"]</h2>

@if (!string.IsNullOrEmpty(Model.CompanyName))
{
    <h3>@Model.CompanyName</h3>
}

<div class="row">
    <div class="col-md-3">
        <div style="max-width: 150px; max-height:150px; position: relative;">
            @{
                string imgSrc = "/images/default_user_icon.jpg";
                if (!string.IsNullOrEmpty(Model.Image))
                {
                    imgSrc = Model.Image;
                }
            }
            <img style="max-width: 150px;"
                 src="@imgSrc"
                 alt="@(string.Format("{0}", Model.FullName))" />
            @if (Model.IsMvp)
            {
                <img style="width: 30px; height: 30px; z-index: 10; position: absolute; right: 20px; bottom: 20px;"
                     src=@("/images/ms-mvp.jpg") alt=@("Microsoft MVP") />
            }
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.TwitterHandle))
{
    <div class="row">
        <div class="col-md-2">
            <span style="font-weight: bold;">@Html.DisplayNameFor(model => model.TwitterHandle):</span>
        </div>
        <div class="col-md-3">
            @{
                var twitterHandle
                    = Model.TwitterHandle.StartsWith('@')
                    ? Model.TwitterHandle.Substring(1)
                    : Model.TwitterHandle;
            }
            <a href="https://twitter.com/@twitterHandle">@Model.TwitterHandle</a>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(Model.LinkedIn))
{
    <div class="row">
        <div class="col-md-2">
            <span style="font-weight: bold;">@Html.DisplayNameFor(model => model.LinkedIn):</span>
        </div>
        <div class="col-md-3">
            @{
                var linkedInHandle
                = Model.LinkedIn.StartsWith('@')
                ? Model.LinkedIn.Substring(1)
                : Model.LinkedIn;

            }
            <a href="https://linkedin.com/in/@linkedInHandle">@Model.LinkedIn</a>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(Model.WebsiteUrl))
{
    <div class="row">
        <div class="col-md-2">
            <span style="font-weight: bold;">@Html.DisplayNameFor(model => model.WebsiteUrl):</span>
        </div>
        <div class="col-md-3">
            @{
                var websiteUrl
                = !Model.WebsiteUrl.StartsWith("http")
                ? "http://" + Model.WebsiteUrl
                : Model.WebsiteUrl;

            }
            <a href=@websiteUrl>@Model.WebsiteUrl</a>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(Model.BlogUrl))
{
    <div class="row">
        <div class="col-md-2">
            <span style="font-weight: bold;">@Html.DisplayNameFor(model => model.BlogUrl):</span>
        </div>
        <div class="col-md-3">
            @{
                var blogUrl
                    = !Model.BlogUrl.StartsWith("http")
                    ? "http://" + Model.BlogUrl
                    : Model.BlogUrl;

            }
            <a href=@blogUrl>@Model.BlogUrl</a>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(Model.Bio))
{
    <div class="row">
        <div class="col-md-2">
            <span style="font-weight: bold;">@Html.DisplayNameFor(model => model.Bio):</span>
        </div>
        <div class="col-md-3">
            @Html.DisplayFor(model => model.Bio)
        </div>
    </div>
}

<hr />

<h4>Sessions:</h4>

@if (Model.Sessions.Count() > 0)
{
    <table class="table">
        <thead>
            <th>
                @Html.DisplayNameFor(model => model.Sessions[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sessions[0].IsApproved)
            </th>
            <th></th>
        </thead>
        <tbody>
            @foreach (var session in Model.Sessions)
            {
                <td>
                    @Html.DisplayFor(item => session.Name)
                </td>
                <td>
                    @Html.DisplayFor(item => session.IsApproved)
                </td>
                <td>
                    @* Allow admins and speakers to edit the sessions *@
                    @if (User.IsInRole("Admin") || (User.IsInRole("Speaker")
                  && speakerId.HasValue && session.SpeakerSessions.Any(s => s.SpeakerId == speakerId.Value)))
                    {
                        <a asp-controller="Sessions" asp-action="Edit" asp-route-id="@session.SessionId">Edit</a><span> | </span>
                    }
                    <a asp-controller="Sessions" asp-action="Details" asp-route-id="@session.SessionId">Details</a>
                    @* Allow admins and speakers to delete sessions *@
                    @if (User.IsInRole("Admin") || (User.IsInRole("Speaker")
                  && speakerId.HasValue && session.SpeakerSessions.Any(s => s.SpeakerId == speakerId.Value)))
                    {
                        <span> | </span><a asp-controller="Sessions" asp-action="Delete" asp-route-id="@session.SessionId">Delete</a>
                    }
                </td>
            }
        </tbody>
    </table>
}
else
{
    <div>Not sessions submitted yet...</div>
}

<div>
    @if (User.IsInRole("Admin") || ((User.IsInRole("Speaker")
&& speakerId.HasValue && Model.SpeakerId == speakerId)))
    {
        <a asp-action="Edit" asp-route-id="@Model.SpeakerId">Edit</a><span> | </span>
    }
    <a asp-action="Index">Back to List</a>
</div>
