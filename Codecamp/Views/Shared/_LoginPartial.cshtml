@using System.Security.Principal;
@using Microsoft.AspNetCore.Authentication.AzureADB2C.UI;
@using Microsoft.Extensions.Options;

@using Codecamp.BusinessLogic;
@inject EventBusinessLogic _eventBL;
@inject IOptionsMonitor<AzureADB2COptions> AzureADB2COptions;

@{
    var options = AzureADB2COptions.Get(AzureADB2CDefaults.AuthenticationScheme);
    var theEvent = await _eventBL.GetActiveEvent();
}

@if (User.Identity.IsAuthenticated)
{
    <ul class="nav navbar-nav navbar-right">
        @if (!string.IsNullOrEmpty(options.EditProfilePolicyId))
        {
            <li>
                <a asp-area="AzureADB2C" asp-controller="Account"
                   asp-action="EditProfile">
                    Hello @User.Identity.Name!
                </a>
            </li>
        }
        else
        {
            <li class="navbar-text">Hello @User.Identity.Name!</li>
        }
        <li>
            <a asp-area="AzureADB2C" asp-controller="Account"
               asp-action="SignOut">Sign out</a>
        </li>
    </ul>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        @if (theEvent != null && theEvent.IsSpeakerRegistrationOpen)
        {
            // Only show speaker registration when speaker registration is open
            <li><a asp-area="Identity" asp-page="/Account/RegisterSpeaker">Register as a Speaker</a></li>
        }
        @if (theEvent != null && theEvent.IsAttendeeRegistrationOpen)
        {
            // Only show attendee registration when attendee registration is open
            <li><a asp-area="Identity" asp-page="/Account/RegisterAttendee">Register as an Attendee</a></li>
        }
        <li><a asp-area="AzureADB2C" asp-controller="Account" asp-action="SignIn">Sign In</a></li>
    </ul>
}
